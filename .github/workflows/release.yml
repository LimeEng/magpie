name: Publish

on:
  workflow_dispatch:
    inputs:
      create-tag:
        description: 'Create and push a new tag'
        required: true
        type: boolean
      publish-crate:
        description: 'Publish a new version to crates.io'
        required: true
        type: boolean

jobs:
  extract-info:
    runs-on: ubuntu-latest
    outputs:
      crate_version: ${{ steps.info.outputs.crate_version }}
      crate_name: ${{ steps.info.outputs.crate_name }}
    steps:
      - uses: actions/checkout@v3
      - name: Extract info
        id: info
        # https://github.com/rust-cli/meta/issues/33
        # Thanks ashutoshrishi!
        run: |
          CRATE_NAME=$(awk -F ' = ' '$1 ~ /name/ { gsub(/["]/, "", $2); printf("%s",$2); exit }' Cargo.toml)
          CRATE_VERSION=$(awk -F ' = ' '$1 ~ /version/ { gsub(/["]/, "", $2); printf("%s",$2); exit }' Cargo.toml)
          CRATE_VERSION="v${CRATE_VERSION}"

          echo "Detected crate: ${CRATE_NAME}@${CRATE_VERSION}"

          echo "::set-output name=crate_version::${CRATE_VERSION}"
          echo "::set-output name=crate_name::${CRATE_NAME}"

  push-tag:
    if: ${{ inputs.create-tag }}
    needs: extract-info
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create and push new tag
        id: tag
        # https://github.com/rust-cli/meta/issues/33
        # Thanks ashutoshrishi!
        run: |
          VERSION=${{needs.extract-info.outputs.crate_version}}

          echo "Creating tag: ${VERSION}"
          git config --global user.name '${{ secrets.GIT_USERNAME }}'
          git config --global user.email '${{ secrets.GIT_EMAIL }}'
          git tag -a ${VERSION} -m ''
          git push origin refs/tags/${VERSION}

  publish:
    # This convoluted if statement will ensure that this
    # job may run even if the "push-tag" job is skipped
    if: always() &&
        (needs.push-tag.result == 'success' || needs.push-tag.result == 'skipped') &&
        inputs.publish-crate
    needs: [push-tag, extract-info]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: Publish to crates.io
        run: cargo publish --token $SECRET_TOKEN
        env:
          SECRET_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
